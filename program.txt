
prime numbers
#include <stdio.h>
int main() {
    int n, i, flag = 0;
    printf("Enter a positive integer: ");
    scanf("%d", &n);

    for (i = 2; i <= n / 2; ++i) {

        // condition for non-prime
        if (n % i == 0) {
            flag = 1;
            break;
        }
    }

    if (n == 1) {
        printf("1 is neither prime nor composite.");
    }
    else {
        if (flag == 0)
            printf("%d is a prime number.", n);
        else
            printf("%d is not a prime number.", n);
    }

    return 0;
}
----------------------------------------------------
armstrong

#include <stdio.h>
int main() {
    int num, originalNum, remainder, result = 0;
    printf("Enter a three-digit integer: ");
    scanf("%d", &num);
    originalNum = num;

    while (originalNum != 0) {
       // remainder contains the last digit
        remainder = originalNum % 10;
        
       result += remainder * remainder * remainder;
        
       // removing last digit from the orignal number
       originalNum /= 10;
    }

    if (result == num)
        printf("%d is an Armstrong number.", num);
    else
        printf("%d is not an Armstrong number.", num);

    return 0;
}
------------------------------------------------------

factorial
#include <stdio.h>
int main() {
    int n, i;
    unsigned long long fact = 1;
    printf("Enter an integer: ");
    scanf("%d", &n);

    // shows error if the user enters a negative integer
    if (n < 0)
        printf("Error! Factorial of a negative number doesn't exist.");
    else {
        for (i = 1; i <= n; ++i) {
            fact *= i;
        }
        printf("Factorial of %d = %llu", n, fact);
    }

    return 0;
}
----------------------------------------------------------
palindrome

#include <iostream>
#include<string.h>
using namespace std; {
   int main(){
      char string1[]={"naman"};
      int i, length;
      int flag = 0;
      length = strlen(string1);
      for(i=0;i < length ;i++){
         if(string1[i] != string1[length-i-1]) {
            flag = 1;
            break;
         }
      }
      if (flag==1){
         printf(" string is not a palindrome");
      } else {
         printf(" string is a palindrome");
      }
      return 0;
   }
}
---------------------------------------------------------
to swap two bits

#include <stdio.h>

/*
Program to swap 1st and 2nd bit of hexadecimal value stored in data variable
*/

int main()
{
    unsigned char data = 0xA; // Assiging hexadecimal value

    // Get 1st bit from data
    unsigned char bit_1 = (data >> 1) & 1;

    // Get 2nd bit from data
    unsigned char bit_2 = (data >> 2) & 1;

    // Get XOR of bit_1 and bit_2
    unsigned char xor_of_bit = bit_1 ^ bit_2;

    printf("After swapping the bits, data value is: %2X", data ^ (xor_of_bit << 1 | xor_of_bit << 2));

    return 0;
}
----------------------------------------------------------
swaapping two words

/* C program to swap bytes/words of integer number.*/
#include <stdio.h>
 
int main()
{
    unsigned int data=0x1234;
    printf("\ndata before swapping : %04X",data);
 
    data= ((data<<8)&0xff00)|((data>>8)&0x00ff);
 
    printf("\ndata after swapping  : %04X",data);
 
    return 0;
}
---------------------------------------------------

to swap using four different methods
#include <stdio.h>
 
int main()
{
    int a,b,t;
    printf(" Enter value of A ?  ");
    scanf("%d",&a);
    printf(" Enter value of B ?  ");
    scanf("%d",&b);
     
    printf("\n Before swapping : A= %d, B= %d",a,b);
 
    /****first method using third variable*/
    t=a;
    a=b;
    b=t;
    printf("\n After swapping (First method) : A= %d, B= %d\n",a,b);
 
    /****second method without using third variable*/
    a=a+b;
    b=a-b;
    a=a-b;
    printf("\n After swapping (second method): A= %d, B= %d\n",a,b);
 
    /****Third method  using X-Or */
    a^=b;
    b^=a;
    a^=b;
    printf("\n After swapping (third method) : A= %d, B= %d\n",a,b);
 
    /****fourth method  (single statement)*/
    a=a+b-(b=a);
    printf("\n After swapping (fourth method): A= %d, B= %d\n",a,b);
 
    return 0;
}
-------------------------------------------------------------------

perfect square
#include <stdio.h>
#include <math.h>
 
int main()
{
    int num;
    int iVar;
    float fVar;
  
    printf("Enter an integer number: ");
    scanf("%d",&num);
  
    fVar=sqrt((double)num);
    iVar=fVar;
 
    if(iVar==fVar)
        printf("%d is a perfect square.",num);
    else
        printf("%d is not a perfect square.",num);
      
    return 0;
}
----------------------------------------------------------------------------------

